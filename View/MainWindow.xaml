<Window x:Class="TestViewApp.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestViewApp"
        xmlns:domain="clr-namespace:TestViewApp.Domain"
        xmlns:utility="clr-namespace:TestViewApp.UtilityClasses"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <!-- DataGrid Background -->
        <LinearGradientBrush x:Key="BlueLightGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFEAF3FF"/>
            <GradientStop Offset="0.654" Color="#FFC0DEFF"/>
            <GradientStop Offset="1" Color="#FFC0D9FB"/>
        </LinearGradientBrush>

        <!-- DatGrid style -->
        <Style TargetType="{x:Type DataGrid}">
            <!--<Setter Property="Margin" Value="5" />-->
            <Setter Property="Background" Value="{StaticResource BlueLightGradientBrush}" />
            <Setter Property="BorderBrush" Value="#FFA6CCF2" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="#FDFFD0" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="VerticalGridLinesBrush" Value="#FFD3D0" />
            <Setter Property="RowHeaderWidth" Value="0" />
        </Style>
    </Window.Resources>
    <DockPanel>
        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="5,0,5,0">
            <TextBlock Text="TestRun list" TextWrapping="Wrap" VerticalAlignment="Bottom" FontFamily="Carimba" FontSize="21.333">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="#FF437CA6" />
                </TextBlock.Foreground>
            </TextBlock>
            <Button Command="{Binding DeleteTestRunItem}" DockPanel.Dock="Right" ToolTip="Delete item" Margin="0,5,5,5">
                <Image Source="..\Images\delete_item.png" Height="16" Width="16" />
            </Button>
            <Button Command="{Binding ReloadRunItems}" DockPanel.Dock="Right" ToolTip="Load test runs" Margin="0,5,5,5">
                <TextBlock Text="Reload"/>
            </Button>
            <TextBox x:Name="DeltaInHours" Text="{Binding DeltaInHours}" Width="40" DockPanel.Dock="Right" Margin="0,5,5,5"/>
        </DockPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <TextBlock Text="Delta (hours): " TextWrapping="NoWrap"/>
            <TextBlock Text="{Binding DeltaInHours}" TextWrapping="Wrap"/>
            <TextBlock Text=". Loading: " TextWrapping="NoWrap"/>
            <TextBlock Text="{Binding LoadInProgress}" TextWrapping="Wrap"/>
            <TextBlock Text=". Number of items: " TextWrapping="NoWrap"/>
            <TextBlock Text="{Binding TestRunItemCount}" TextWrapping="Wrap"/>
        </StackPanel>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="80*"/>
            </Grid.ColumnDefinitions>
            <utility:ExtendedTreeView ItemsSource="{Binding BuildDefinitionList}" SelectedItem_="{Binding SelectedBuildDefinitionItem, Mode=TwoWay}">
                <utility:ExtendedTreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}: {1} [Id: {2}]">
                                    <Binding Path="Path"/>
                                    <Binding Path="Name"/>
                                    <Binding Path="Id"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </HierarchicalDataTemplate>
                </utility:ExtendedTreeView.ItemTemplate>
            </utility:ExtendedTreeView>
            
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="50*"/>
                </Grid.RowDefinitions>
                <DataGrid x:Name="BuildListGrid"
                          ItemsSource="{Binding BuildList}"
                          SelectedItem="{Binding SelectedBuildItem}"
                          AutoGenerateColumns="False"
                          Grid.Row="0"
                          DataContextChanged="OnMainGrid_DataContextChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Width="60" Binding="{Binding Id}" IsReadOnly="True" />
                        <DataGridTextColumn Header="BuildNumber" Width="400" Binding="{Binding BuildNumber}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Status" Width="80" Binding="{Binding Status}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Result" Width="80" Binding="{Binding Result}" IsReadOnly="True" />
                        <DataGridTextColumn Header="QueueTime" Width="100" Binding="{Binding QueueTime, StringFormat=\{0:dd-MMM HH:mm:ss\}}" IsReadOnly="True" />
                        <DataGridTextColumn Header="StartTime" Width="100" Binding="{Binding StartTime, StringFormat=\{0:dd-MMM HH:mm:ss\}}" IsReadOnly="True" />
                        <DataGridTextColumn Header="FinishTime" Width="100" Binding="{Binding FinishTime, StringFormat=\{0:dd-MMM HH:mm:ss\}}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Uri" Width="160" Binding="{Binding Uri}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Reason" Width="100" Binding="{Binding Reason}" IsReadOnly="True" />
                        <DataGridTextColumn Header="RequestedFor" Width="200" Binding="{Binding RequestedFor.DisplayName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="RequestedBy" Width="200" Binding="{Binding RequestedBy.DisplayName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="LastChangedBy" Width="200" Binding="{Binding LastChangedBy.DisplayName}" IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
                
                <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Stretch" />
                
                <DataGrid x:Name="TestRunListGrid"
                ItemsSource="{Binding TestRunList}"
                SelectedItem="{Binding SelectedTestRunItem}"
                AutoGenerateColumns="False"
                Grid.Row="2"
                DataContextChanged="OnMainGrid_DataContextChanged"
                >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="StartedDate" Binding="{Binding StartedDate}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="CompletedDate" Binding="{Binding CompletedDate}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="StageName" Binding="{Binding PipelineReference.StageReference.StageName}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="State" Binding="{Binding State}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="TotalTests" Binding="{Binding TotalTests}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="PassedTests" Binding="{Binding PassedTests}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="UnanalyzedTests" Binding="{Binding UnanalyzedTests}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                        <DataGridCheckBoxColumn Header="IsAutomated" Binding="{Binding IsAutomated}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="IncompleteTests" Binding="{Binding IncompleteTests}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="NotApplicableTests" Binding="{Binding NotApplicableTests}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Substate" Binding="{Binding Substate}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>

                <GridSplitter Grid.Row="3" Height="5" VerticalAlignment="Stretch" />

                <StackPanel Grid.Row="4">
                    <DockPanel LastChildFill="False" DockPanel.Dock="Top" Margin="5,0,5,0">
                        <CheckBox Margin="0,5,5,5">Show only failed</CheckBox>
                        <TextBlock DockPanel.Dock="Right" Margin="0,5,5,5">0</TextBlock>
                        <TextBlock DockPanel.Dock="Right" Margin="0,5,5,5">Loaded:</TextBlock>
                    </DockPanel>
                    <DataGrid x:Name="TestCaseResultListGrid"
                          ItemsSource="{Binding TestCaseResultList}"
                          SelectedItem="{Binding SelectedTestCaseResultItem}"
                          AutoGenerateColumns="False"
                          
                          DataContextChanged="OnMainGrid_DataContextChanged"
                          >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="TestCaseTitle" Binding="{Binding TestCaseTitle}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Outcome" Binding="{Binding Outcome}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="DurationInMs" Binding="{Binding DurationInMs}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="AutomatedTestName" Binding="{Binding AutomatedTestName}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
